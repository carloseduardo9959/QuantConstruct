<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnlogoInicio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>